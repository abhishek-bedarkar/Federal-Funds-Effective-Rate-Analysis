---
title: "Federal Funds Effective Rate Analysis"
author: "Abhishek Bedarkar & Sanket Gadhave"
format: revealjs
editor: visual
scrollable: true
---

```{r}
library(fredr)
library(forecast)
library(dygraphs)
library(xts)
library(ggplot2)
library(reprex)
library(tibbletime)
library(dplyr)
library(tseries)
library(zoo)
library(vars)

fredr_set_key('33b45f8519b2a909fca701748cf47495')
```

## Agenda

1.  Introduction
2.  Empirical Data Analysis
3.  Modelling and forecasting
4.  Cross Validation
5.  Forecast analysis
6.  Practical Implications
7.  Conclusion

## 1. Introduction

#### 1.1 Overview of the Federal Funds Rate Series:

-   The federal funds rate is the overnight interest rate at which banks lend surplus money to each other, ensuring adequate liquidity in the banking system.

```{r}
fed_rates <- fredr(series_id = "FEDFUNDS")
fed_rates$date <- as.Date(fed_rates$date)

# Selecting start and end date for series
start_date <- as.Date("1995-01-01")
fed_rates <- subset(fed_rates, date >= start_date)


# Plot for Federal Funds Rate
ggplot(data = fed_rates, aes(x = date, y = value)) +
  geom_line() +
  ggtitle("Federal Funds Rate") +
  xlab("Date") +
  ylab("Rate (%)") +
  theme_minimal()
```

## 1. Introduction

#### 1.2. Overview of Treasury Bond Spread Series:

-   The time series calculates the spread between the 10-Year and 2-Year U.S. Treasury bonds, influencing the Federal Funds Rate based on expectations of future interest rate differentials.

```{r}
bond_diff_rates <- fredr(series_id = "T10Y2YM")
bond_diff_rates$date <- as.Date(bond_diff_rates$date)
bond_diff_rates <- subset(bond_diff_rates, date >= start_date)

# Plot for 10-Year Minus 2-Year Treasury Spread
ggplot(data = bond_diff_rates, aes(x = date, y = value)) +
  geom_line() +
  ggtitle("10-Year Minus 2-Year Treasury Spread") +
  xlab("Date") +
  ylab("Spread (%)") +
  theme_minimal()
```

## 1. Introduction

#### 1.3. Impact of Treasury Rate Differential on Federal Funds Rate

-   Spread favoring the 10-Year Treasury implies expected future interest rate rises, leading banks to prioritize short-term lending over long-term investments in the 10-Year Treasury.

```{r}
fed_rates_ts <- fed_rates %>% as_tbl_time(index = date)
bond_diff_rates_ts <- bond_diff_rates %>% as_tbl_time(index = date)

# Merging datasets
merged_data <- left_join(fed_rates_ts, bond_diff_rates_ts, by = "date", suffix = c("_fed", "_bond_diff"))
cleaned_data <- na.omit(merged_data)

ggplot(data = cleaned_data) +
  geom_line(aes(x = date, y = value_fed, colour = "Federal Funds Rate")) +
  geom_line(aes(x = date, y = value_bond_diff, colour = "10Y-2Y Spread")) +
  labs(title = "Federal Funds Rate and 10Y-2Y Spread Over Time", x = "Date", y = "Value (%)") +
  scale_color_manual(values = c("Federal Funds Rate" = "blue", "10Y-2Y Spread" = "red")) +
  theme_minimal() +
  theme(legend.title = element_blank())

```

## **2. Empirical Data Analysis**

#### 2.1.1 Augmented Dickey--Fuller test

```{r}
adf.test(fed_rates$value, alternative = "stationary")
adf.test(bond_diff_rates$value, alternative = "stationary")
```

## 2. Empirical Data Analysis

#### 2.1.2 ADF Analysis

-   The Augmented Dickey-Fuller test reveals that both the Federal Funds Rate and the 10-Year Minus 2-Year Treasury Spread series are non-stationary, with p-values exceeding 0.05.
-   Despite the hypothesis of stationarity, the data lacks evidence to reject the null hypothesis, implying the likely presence of trends or patterns requiring differencing or other transformations for more accurate analysis or modeling.

## 2. Empirical Data Analysis

#### 2.1.3 Differencing

```{r}
differenced_data <- diff(fed_rates$value)
adf_result <- ur.df(differenced_data, type = "none", selectlags = "AIC")
summary(adf_result)
```

-   The p-value associated with the test statistic is approximately 5.869e-16, which is significantly less than the common significance levels (1%, 5%, and 10%).

## **2. Empirical Data Analysis**

#### 2.2.1 ACF

```{r}
# Plot ACF for FFR
acf(fed_rates$value, lag.max = 20)
```

## **2. Empirical Data Analysis**

#### 2.2.2 ACF Analysis

-   The Federal Funds Rate Autocorrelation Plot reveals a decreasing correlation with increasing time lags, suggesting a gradual influence of past values on future ones.
-   However, the consistently elevated ACF values beyond significance bounds indicate non-stationarity, implying the necessity of differencing the series for achieving stationarity in forecasting models.

## **2. Empirical Data Analysis**

#### 2.3.1 PACF

```{r}
# Plot PACF for FFR
pacf(fed_rates$value, lag.max = 20)
```

## **2. Empirical Data Analysis**

#### 2.3.2 PACF Analysis

-   The PACF plot for the Federal Funds Rate indicates a notable spike at lag 1, suggesting that an AR(1) model---where the current value is notably influenced by its immediate past---is suitable, with minimal influence from values beyond the first lag.

## **2. Empirical Data Analysis**

#### 2.4.1. Decomposition

```{r}
fed_rates_ts <- ts(fed_rates$value, start = c(1995, 1), frequency = 12)
decomposed <- stl(fed_rates_ts, s.window = "periodic")
```

```{r}
plot(decomposed)
```

## **2. Empirical Data Analysis**

#### 2.4.2 Decomposition Analysis

-   The seasonal plot's regular spikes show a systematic seasonal effect, the trend plot's smooth line illustrates the long-term trend, and the irregular fluctuations in the remainder component highlight unexplained variance or potential one-off events, giving insights into how the Federal Funds Rate has changed over time.

## **2. Empirical Data Analysis**

#### 2.5.1 Correlation

```{r}
cor(cleaned_data$value_fed, cleaned_data$value_bond_diff, use = "complete.obs")
```

```{r}
ccf(cleaned_data$value_fed, cleaned_data$value_bond_diff, lag.max = 20, main = "CCF between FFR and TreasuryÂ Spread")
```

## **2. Empirical Data Analysis**

#### 2.5.2 Correlation Analysis

-   The strong negative correlation of approximately -0.725 between the Federal Funds Rate (FFR) and the 10-Year Minus 2-Year Treasury Spread means that when the FFR rises, the spread generally decreases, and vice versa.
-   The Cross-Correlation Function (CCF) plot supports this negative correlation, especially at lag 0, suggesting that changes in FFR tend to precede corresponding changes in the spread.
-   Further insights at different lags remain speculative without a clearer view of the CCF plot.

## 3. Modelling and Forecasting

#### 3.1.1 Reg ARIMA Model

```{r}
# Convert the series to time series objects
fed_rates_ts <- ts(cleaned_data$value_fed, start=c(1995, 1), frequency=12)
bond_diff_rates_ts <- ts(cleaned_data$value_bond_diff, start=c(1995, 1), frequency=12)

# Ensure the series are of equal length for the regression
lengths <- pmin(length(fed_rates_ts), length(bond_diff_rates_ts))
fed_rates_ts <- fed_rates_ts[1:lengths]
bond_diff_rates_ts <- bond_diff_rates_ts[1:lengths]

# Fit ARIMA models with the spread as a covariate
# ARIMA(2,1,1)
model_211 <- Arima(fed_rates_ts, order=c(2,1,1), xreg=bond_diff_rates_ts)

# ARIMA(1,1,1)
model_111 <- Arima(fed_rates_ts, order=c(1,1,1), xreg=bond_diff_rates_ts)

# ARIMA(0,1,1)
model_011 <- Arima(fed_rates_ts, order=c(0,1,1), xreg=bond_diff_rates_ts)

# Extract the AIC and BIC values for each model
model_info <- data.frame(
  Model = c("ARIMA(2,1,1)", "ARIMA(1,1,1)", "ARIMA(0,1,1)"),
  AIC = c(AIC(model_211), AIC(model_111), AIC(model_011)),
  BIC = c(BIC(model_211), BIC(model_111), BIC(model_011))
)

# Display the information
print(model_info)
```

## 3. Modelling and Forecasting

#### 3.1.2 Reg ARIMA Model Residuals

```{r}
checkresiduals(model_211)
```

## 3. Modelling and Forecasting

#### 3.1.3 Reg ARIMA Model Analysis

-   Tried ARIMA(1,1,1), ARIMA(2,1,1), ARIMA(0,1,1) and Selected ARIMA(2,1,1) due to ADF test, PACF, and ACF analysis.
-   Order selection based on ADF test and PACF analysis.
-   Autoregressive component with a significant spike at lag 1.
-   Moving average component of order 1, indicated by gradual decay in ACF plot.
-   Balanced model complexity and fit compared to alternatives.

## 3. Modelling and Forecasting

#### 3.1.4 Reg ARIMA Model forecasting

```{r}
# Forecast for future dates
future_covariate <- bond_diff_rates_ts[length(bond_diff_rates_ts)]
forecast_length <- 1
forecasts <- forecast(model_211, xreg = rep(future_covariate, forecast_length), h = forecast_length)

# Plot the forecast with confidence intervals
plot(forecasts)

# Display forecast
print(forecasts)
```

## 3. Modelling and Forecasting

#### 3.2.1 VAR Model

```{r}
data <- data.frame(fed_rates = fed_rates_ts, bond_diff_rates = bond_diff_rates_ts)

# Fit VAR model
var_model <- VAR(data, p = 2)  

summary(var_model)
```

## 3. Modelling and Forecasting

#### 3.2.2 VAR Model Analysis

-   In a VAR model, each variable is regressed on its lagged values and the lagged values of all other variables in the system.
-   The model estimates coefficients for each lagged value of all variables, allowing for the simultaneous examination of how changes in one variable influence changes in the others.
-   Selected p=2 for the lag order based on the Cross-Correlation Function (CCF) plot, which showed significant correlation at lag 2.

## 3. Modelling and Forecasting

#### 3.2.3 VAR Model forecasting

```{r}
# Forecasting with the regressor
forecast_var <- predict(var_model, n.ahead = forecast_length)

# Plot the forecast
print(forecast_var)
```

## 4. Cross Validation

#### 4.1.1 Cross Validation for ARIMA(2,1,1)

```{r}
# Now, let's compare forecasts using cross validation for multiple time horizons
# For ARIMA(2,1,1)

# Let's define the time horizons we want to test
horizons <- c(1, 3, 6, 12)

# Prepare a dataframe to record the errors
errors_df_arima <- data.frame(horizon = integer(), MAE = numeric(), RMSE = numeric())

# Perform rolling forecast
for (h in horizons) {
  mae_errors <- c()
  rmse_errors <- c()
  
  # Define the minimum number of observations needed to fit the model: order p + q + h
  
  min_obs <- max(2 + 1 + h, 30)
  
  # Define the maximum training set index
  max_train_index <- length(fed_rates_ts) - h
  
  # Perform rolling forecast
  for (i in min_obs:max_train_index) {
    # Fit ARIMA model on the training set
    train_set <- fed_rates_ts[1:i]
    train_covariate <- bond_diff_rates_ts[1:i]
    model <- Arima(train_set, order=c(2,1,1), xreg=train_covariate)
    
    # Forecast
    test_covariate <- bond_diff_rates_ts[(i+1):(i+h)]
    forecast <- forecast(model, h=h, xreg=test_covariate)
    
    # Get actual values
    actuals <- fed_rates_ts[(i+1):(i+h)]
    
    # Calculate errors
    mae_errors <- c(mae_errors, mean(abs(forecast$mean - actuals)))
    rmse_errors <- c(rmse_errors, sqrt(mean((forecast$mean - actuals)^2)))
  }
  
  # Record the mean errors for this horizon
  errors_df_arima <- rbind(errors_df_arima, data.frame(horizon = h, MAE = mean(mae_errors), RMSE = mean(rmse_errors)))
}

# Print out the error metrics for each horizon
print(errors_df_arima)

```

## 4. Cross Validation

#### 4.1.2 Cross Validation for Arima(2,1,1) - Analysis

-   The output from the cross-validation suggests that as the forecast horizon increases, the average forecast error also increases.

-   For a 1-month ahead forecast, the model has an MAE and RMSE of approximately 0.084, indicating close predictions.

-   At a 3-month horizon, the errors are larger, with an MAE of 0.154 and RMSE of 0.172. The errors continue to increase for the 6-month and 12-month horizons.

## 4. Cross Validation

#### 4.1.2 Cross Validation for Arima(2,1,1) - Analysis

-   This pattern is expected in time series forecasting; it's generally harder to predict further into the future. The MAE and RMSE are both measures of forecast accuracy, with lower values indicating better performance.

-   The RMSE gives more weight to larger errors due to the squaring of residuals, so it's especially sensitive to outliers.

## 4. Cross Validation

#### 4.2.1 Cross Validation for Var Model

```{r}
# Define the time horizons you want to test
horizons <- c(1, 3, 6, 12)

# Prepare a dataframe to record the errors for the fed_rates series
errors_df_var <- data.frame(horizon = integer(), MAE = numeric(), RMSE = numeric())

# Fixed lag order for VAR model
p <- 2


# Adjusted for VAR model requirements
min_obs <- max(p + max(horizons), 30)

for (h in horizons) {
  mae_errors <- c()
  rmse_errors <- c()
  
  # Adjusting the starting index to ensure enough data for fitting and forecasting
  for (i in min_obs:(nrow(data) - h)) {
    train_data <- data[1:i, ]
    var_model <- VAR(train_data, p = p, type = "const")
    
    # Forecast
    forecasts <- predict(var_model, n.ahead = h)
    
    # Extract forecast for fed_rates to compare with actuals
    predicted_fed_rates <- forecasts$fcst$fed_rates[, "fcst"]
    
    # Actual values for comparison
    actuals <- data[(i+1):(i+h), "fed_rates"]
    
    # Calculate errors
    mae_errors <- c(mae_errors, mean(abs(predicted_fed_rates - actuals)))
    rmse_errors <- c(rmse_errors, sqrt(mean((predicted_fed_rates - actuals)^2)))
  }
  
  # Record the mean errors for this horizon
  errors_df_var <- rbind(errors_df_var, data.frame(horizon = h, MAE = mean(mae_errors, na.rm = TRUE), RMSE = mean(rmse_errors, na.rm = TRUE)))
}

# Print out the error metrics for each horizon
print(errors_df_var)
```

## 4. Cross Validation

#### 4.2.2 Cross Validation for Var Model - Analysis

-   Both MAE and RMSE increase as the forecast horizon increases from 1 to 12. This is a common and expected pattern in time series forecasting, as forecasts become less accurate as you try to predict further into the future. The increase in errors reflects the accumulating uncertainty in the model's predictions over time.

## 4. Cross Validation

#### 4.2.2 Cross Validation for Var Model - Analysis

-   The magnitude of the errors gives you an indication of the average forecast error you can expect at each horizon. For example, at a 1-step ahead forecast, the MAE indicates that, on average, the model's forecasts are about 0.082 percentage points off from the actual values. At a 12-step ahead forecast, this average error increases to about 0.565 percentage points.

## 5. Forecast Analysis

-   **Comprehensive Evaluation**: To thoroughly assess ARIMA and VAR models, it's crucial to examine both Mean Absolute Error (MAE) and Root Mean Squared Error (RMSE) for various forecast horizons.

-   **Short-term Superiority**: VAR exhibits a slight advantage over ARIMA in very short-term forecasting, indicating improved accuracy with the incorporation of dynamics between multiple time series.

## 5. Forecast Analysis

-   **Consistent Long-term Excellence**: ARIMA consistently outperforms VAR in medium to long forecast horizons, attributed to its capability to capture underlying patterns without the added complexity of integrating multiple time series.

-   **Model Complexity Impact**: Despite the expectation that VAR's consideration of interactions might enhance forecasting, ARIMA often outperforms when the forecast variable is significantly driven by its own past values, emphasizing the importance of model simplicity.

## 6. Practical Implications

-   The ARIMA and VAR forecasting results carry practical significance for economic analysis, policy-making, and financial planning, particularly in the context of the Federal Funds Rate and the 10-Year Minus 2-Year Treasury Spread.

-   **Short-term Economic Analysis and Policy Making**:

    -   **VAR's Short-term Advantage:** VAR model's slight edge in short-term forecasting proves valuable for immediate economic analysis and decision-making, enabling central banks and financial institutions to anticipate the immediate impact of economic shocks and adjust monetary policies with higher confidence for more stable outcomes.

## 6. Practical Implications

-   **Medium to Long-term Strategic Planning:**

    -   **ARIMA's Medium to Long-term Reliability**: ARIMA's superior performance in medium to long-term horizons makes it a reliable tool for strategic planning and budgeting, providing a foundation for longer-term economic and financial decisions.

    -   **Investment and Financing Decisions:** The enhanced accuracy of ARIMA models for longer horizons is beneficial for investors and financial analysts, informing decisions related to portfolio adjustments, risk management strategies, and capital allocation. Lower forecast errors contribute to reduced uncertainty and potentially lower risk in long-term investments.

## Conclusion

-   Our analysis of the Federal Funds Effective Rate using ARIMA and VAR models reveals critical insights for short to long-term economic forecasting and decision-making.
-   While VAR models slightly outperform ARIMA in the short term, ARIMA provides more reliable forecasts over longer horizons, emphasizing the importance of model selection based on forecast objectives and horizons.
-   This study underscores the nuanced understanding required for effective economic policy formulation and financial planning, paving the way for further research and methodologicalÂ advancements.
